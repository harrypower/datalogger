<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Logged Temperature Humidity and Barometric Pressure</title>
</head>
<$
include ../string.fs
include ../Gforth-Tools/sqlite3_gforth_lib.fs
decimal

true value rvdataerror
variable rvdata$ rvdata$ $init
variable datalogger_path$ 
variable junks$

s" /var/lib/datalogger-gforth/datalogger_home_path" slurp-file datalogger_path$ $!
s" /collection/sensordb.data" datalogger_path$ $@ junks$ $! junks$ $+!
junks$ $@ dbname

: nextcomma ( caddr u -- caddr u nflag )
    s" ," search if
	swap 1 + swap 1 - true
    then ;

: #uptocomma { caddr u -- d nflag }
    caddr u s" ," search if
	swap drop u swap - caddr swap s>number?
    else
	0 0 false
    then ;

: issuedbcmds ( -- caddr u nerror ) \ nerror is false if db query is ok
    sendsqlite3cmd \ if nerror is not false caddr u will contain the error otherwise it is the sqlite3 message
    if
	5 ms sendsqlite3cmd
	if
	    10 ms sendsqlite3cmd drop 
	then
    then
    dberrmsg
    dup false = if
	swap drop swap drop dbret$ rot
    then ;

: getlastdata ( -- )
    s" select DTHtemperature,DTHhumd,BMPpressure,row,datetime(dtime,'unixepoch','localtime') from thpdata limit 1 offset ((select max(row) from thpdata)-1);" dbcmds
    issuedbcmds to rvdataerror rvdata$ $! ;

: totalerrors ( -- dmaxerrors nerror )
    s" select max(row) from errors;" dbcmds
    issuedbcmds if
	2drop 0 0 dberrmsg -rot 2drop
    else
	#uptocomma  
    then ;
	
: temperature ( -- dtemp nerror )
    rvdata$ $@
    #uptocomma  ;

: humidity ( -- dhumd nerror )
    rvdata$ $@
    nextcomma if
	#uptocomma 
    else
	false
    then ;

: pressure ( -- dpress nerror )
    rvdata$ $@
    nextcomma if
	nextcomma if
	    #uptocomma
	else
	     false
	then
    else
	false
    then ;

: totaldata ( -- dmaxdata nerror )
    rvdata$ $@
    nextcomma if
	nextcomma if
	    nextcomma if
		#uptocomma 
	    else
		false
	    then
	else
	    false
	then
    else
	false
    then ;

: lasttime ( -- caddr u nerror )
    rvdata$ $@
    nextcomma if
	nextcomma if
	    nextcomma if
		nextcomma if
		    2dup nextcomma if
			swap drop - 1 - true
		    else
			2drop false
		    then
		else
		    false
		then
	    else
		false
	    then
	else
	    false
	then
    else
	false
    then ;

getlastdata

: notvalidmsg ( -- )
    s" not valid or unavailable!" type ;

$>
<body>
<h1><p> Last logged temperature value was: <$ temperature rvdataerror false = and [if] d>f 10 s>d d>f f/ f. s" C" type [else] notvalidmsg 2drop [then] $> </p></h1>
<h1><p> Last logged humidity value was: <$ humidity rvdataerror false = and [if] d>f 10 s>d d>f f/ f. s" rH" type [else] notvalidmsg 2drop [then] $> </p></h1>
<h1><p> Last logged pressure value was: <$ pressure rvdataerror false = and [if] d. s" pa" type [else] notvalidmsg 2drop [then] $> </p></h1>
<h1><p> Total data Points: <$ totaldata rvdataerror false = and [if] d. [else] notvalidmsg 2drop [then] $> </p></h1>
<h1><p> Last data point time was: <$ lasttime rvdataerror false = and [if] type [else] notvalidmsg 2drop [then] $> </p></h>
<h1><p> Raw data: <$ rvdataerror [if] notvalidmsg [else] rvdata$ $@ type [then]  $> </p></h1>
<h1><p> Total errors <$ totalerrors [if]  d. [else] notvalidmsg 2drop [then] $> </p></h1>
</body>
</html>
