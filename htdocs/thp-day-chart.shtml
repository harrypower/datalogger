<!DOCTYPE html>
<HTML>
<HEAD>  
<meta charset="utf-8">
<TITLE>Temperature Charting</TITLE>  
</HEAD>  
<BODY>  

<$
 
include ../string.fs
include ../Gforth-Tools/sqlite3_gforth_lib.fs
decimal

variable datalogger_path$
variable dbpath$
variable junks$
variable presql$
variable postsql$
variable lablesnow$
variable datanow$
variable lablesday$
variable minday$
variable maxday$
variable minhumdday$
variable maxhumdday$
variable minpresday$
variable maxpresday$
variable datenow$
0 value starthour 
0 value startyear
0 value startday
0 value startmonth


s" /var/lib/datalogger-gforth/datalogger_home_path" slurp-file datalogger_path$ $!
s" /collection/sensordb.data" datalogger_path$ $@ junks$ $! junks$ $+!
junks$ $@ dbname
junks$ $@ dbpath$ $!


: dto$ ( d -- caddr u )  \ convert double signed to a string
    swap over dabs <<# #s rot sign #> #>> ;

: nextcomma ( caddr u -- caddr1 u1 nflag ) \ nflag is true if next comma is found and caddr u contains the string past that comma
    s" ," search if
	swap 1 + swap 1 - true
    then ;

: #uptocomma { caddr u -- d nflag } \ nflag is true is d is the number from string before a comma
    caddr u s" ," search if
	swap drop u swap - caddr swap s>number?
    else
	0 0 false
    then ;

: #pastxcomma { caddr u n#comma -- d nflag } \ nflag is true if n#comma is found and a number d can be extracted from it
    try
	n#comma 0 ?do
	    caddr u nextcomma if to u to caddr else 1 throw then
	loop
	caddr u #uptocomma
    restore 1 = if 0 0 false else true then
    endtry ;

: $pastxcomma { caddr u n#comma -- caddr1 u1 nflag } \ nflag is true if n#comma is found .. the caddr1 u1 will contain the string before that last comma
    try
	n#comma 0 ?do
	    caddr u nextcomma if to u to caddr else 1 throw then
	loop
	caddr u 2dup nextcomma if swap drop 1 + - else 2drop 2 - then
	true
    restore 1 = if 0 0 false else true then
    endtry ;


s" " dbrecordseparator

10000 mkretbuff

: getdate ( -- )
    s" ," dbfieldseparator
    s" select date(dtime,'unixepoch','localtime') from thpdata limit 1 offset ((select max(rowid) from thpdata) -1);" dbcmds
    sendsqlite3cmd drop dbret$ 1 - datenow$ $! ;
 
: isnull? ( caddr u -- caddr1 u1 ) \ look for "NULL," in the string and if not found return string but if found return ","
    2dup s" NULL," search if 2drop 2drop s" ," else 2drop then ; 

: add0$ ( caddr u -- caddr1 u1 ) \ simply adds a "0" to begining of sting if string caddr u only contains one char at entry
    dup 1 = if s" 0" pad $! pad $+! pad $@ then ;

: getnowlables
    s" ," dbfieldseparator
    s" " dbrecordseparator
    1000 mkretbuff
    s" select strftime('%H',dtime,'unixepoch','localtime') from thpdata where " presql$ $!
    s" (dtime > strftime('%s','now','-87000 seconds')) " presql$ $+!
    s" group by strftime('%Y%m%d%H',dtime,'unixepoch','localtime') order by dtime ; " presql$ $+!
    presql$ $@ dbcmds sendsqlite3cmd drop
    dbret$ 1 - lablesday$ $! ;

: getnowmin
    s" ," dbfieldseparator
    s" " dbrecordseparator
    1000 mkretbuff
    s" select ((DTHtemperature/10)+((DTHtemperature%10)*0.1)) from thpdata where " presql$ $!
    s" (dtime > strftime('%s','now','-87000 seconds')) " presql$ $+!
    s" group by strftime('%Y%m%d%H',dtime,'unixepoch','localtime') having min(DTHtemperature) order by dtime ; " presql$ $+!
    presql$ $@ dbcmds sendsqlite3cmd drop
    dbret$ 1 - minday$ $! ;
: getnowmax
    s" ," dbfieldseparator
    s" " dbrecordseparator
    1000 mkretbuff
    s" select ((DTHtemperature/10)+((DTHtemperature%10)*0.1)) from thpdata where " presql$ $!
    s" (dtime > strftime('%s','now','-87000 seconds')) " presql$ $+!
    s" group by strftime('%Y%m%d%H',dtime,'unixepoch','localtime') having max(DTHtemperature) order by dtime ; " presql$ $+!
    presql$ $@ dbcmds sendsqlite3cmd drop
    dbret$ 1 - maxday$ $! ;
: gethumdnowmin
    s" ," dbfieldseparator
    s" " dbrecordseparator
    1000 mkretbuff
    s" select ((DTHhumd/10)+((DTHhumd%10)*0.1)) from thpdata where " presql$ $!
    s" (dtime > strftime('%s','now','-87000 seconds')) " presql$ $+!
    s" group by strftime('%Y%m%d%H',dtime,'unixepoch','localtime') having min(DTHhumd) order by dtime ; " presql$ $+!
    presql$ $@ dbcmds sendsqlite3cmd drop
    dbret$ 1 - minhumdday$ $! ;

: gethumdnowmax
    s" ," dbfieldseparator
    s" " dbrecordseparator
    1000 mkretbuff
    s" select ((DTHhumd/10)+((DTHhumd%10)*0.1)) from thpdata where " presql$ $!
    s" (dtime > strftime('%s','now','-87000 seconds')) " presql$ $+!
    s" group by strftime('%Y%m%d%H',dtime,'unixepoch','localtime') having max(DTHhumd) order by dtime ; " presql$ $+!
    presql$ $@ dbcmds sendsqlite3cmd drop
    dbret$ 1 - maxhumdday$ $! ;
: getpresnowmin
    s" ," dbfieldseparator
    s" " dbrecordseparator
    1000 mkretbuff
    s" select ((BMPpressure/10)+((BMPpressure%10)*0.1)) from thpdata where " presql$ $!
    s" (dtime > strftime('%s','now','-87000 seconds')) " presql$ $+!
    s" group by strftime('%Y%m%d%H',dtime,'unixepoch','localtime') having min(BMPpressure) order by dtime ; " presql$ $+!
    presql$ $@ dbcmds sendsqlite3cmd drop
    dbret$ 1 - minpresday$ $! ;

: getpresnowmax
    s" ," dbfieldseparator
    s" " dbrecordseparator
    1000 mkretbuff
    s" select ((BMPpressure/10)+((BMPpressure%10)*0.1)) from thpdata where " presql$ $!
    s" (dtime > strftime('%s','now','-87000 seconds')) " presql$ $+!
    s" group by strftime('%Y%m%d%H',dtime,'unixepoch','localtime') having max(BMPpressure) order by dtime ; " presql$ $+!
    presql$ $@ dbcmds sendsqlite3cmd drop
    dbret$ 1 - maxpresday$ $! ;

getnowlables
getnowmin
getnowmax
gethumdnowmin
gethumdnowmax
getpresnowmin
getpresnowmax

$>

<script src="../chart/Chart.js"></script>
<canvas id="tempChart" width=1000" height="300"></canvas>

<script>

  var tempoptions = { 'pointDotRadius':2 , scaleFontColor : "#572", scaleFontFamily : "'Comic Sans MS'", scaleFontStyle : "bold" };
  var tempdata = {
  labels : [ <$ lablesday$ $@ type $> ],
    datasets : [
    {
    fillColor : "rgba(120,220,250,0.5)",
    strokeColor : "rgba(220,220,220,1)",
    pointColor : "rgba(220,220,220,1)",
    pointStrokeColor : "#fff",
    data : [ <$ minday$ $@ type $> ]
      },
      {
      fillColor : "rgba(151,187,205,0.5)",
      strokeColor : "rgba(151,187,205,1)",
      pointColor : "rgba(151,187,205,1)",
      pointStrokeColor : "#fff",
      data : [ <$ maxday$ $@ type $> ]
        }
	]
	}
	
	//Get the context of the canvas element we want to select
	var tempctx = document.getElementById("tempChart").getContext("2d");
	var mytempChart = new Chart(tempctx).Line(tempdata,tempoptions);
	
</script>

<h1>Temperature (in C) hourly minimum and maximum values for <$ getdate datenow$ $@ type $> </h1>
	    
<script src="../chart/Chart.js"></script>
<canvas id="humdChart" width=1000" height="300"></canvas>

<script>

  var humdoptions = { 'pointDotRadius':2 , scaleFontColor : "#572", scaleFontFamily : "'Comic Sans MS'", scaleFontStyle : "bold" };
  var humddata = {
  labels : [ <$ lablesday$ $@ type $> ],
    datasets : [
    {
    fillColor : "rgba(120,220,250,0.5)",
    strokeColor : "rgba(220,220,220,1)",
    pointColor : "rgba(220,220,220,1)",
    pointStrokeColor : "#fff",
    data : [ <$ minhumdday$ $@ type $> ]
      },
      {
      fillColor : "rgba(151,187,205,0.5)",
      strokeColor : "rgba(151,187,205,1)",
      pointColor : "rgba(151,187,205,1)",
      pointStrokeColor : "#fff",
      data : [ <$ maxhumdday$ $@ type $> ]
	}
	]
	}
	
	//Get the context of the canvas element we want to select
	var humdctx = document.getElementById("humdChart").getContext("2d");
	var myhumdChart = new Chart(humdctx).Line(humddata,humdoptions);
</script>
	    
<h1>Humidity hourly (in %rh) minimum and maximum values for <$ datenow$ $@ type $> </h1>

<script src="../chart/Chart.js"></script>
<canvas id="pressureforthChart" width=1000" height="300"></canvas>

<script>
  
  var pressoptions = { 'pointDotRadius':2 , scaleFontColor : "#572", scaleFontFamily : "'Comic Sans MS'", scaleFontStyle : "bold" };
  var pressuredata = {
  labels : [ <$ lablesday$ $@ type $> ],
    datasets : [
    {
    fillColor : "rgba(120,220,250,0.5)",
    strokeColor : "rgba(220,220,220,1)",
    pointColor : "rgba(220,220,220,1)",
    pointStrokeColor : "#fff",
    data : [ <$ minpresday$ $@ type $> ]
      },
      {
      fillColor : "rgba(151,187,205,0.5)",
      strokeColor : "rgba(151,187,205,1)",
      pointColor : "rgba(151,187,205,1)",
      pointStrokeColor : "#fff",
      data : [ <$ maxpresday$ $@ type $> ]
	}
	]
	}
	
	//Get the context of the canvas element we want to select
	var pressurectx = document.getElementById("pressureforthChart").getContext("2d");
	var mypressChart = new Chart(pressurectx).Line(pressuredata,pressoptions);
</script>

<h1>Pressure (in pa) hourly minimum and maximum values for <$ datenow$ $@ type $> </h1>

<$ url-args $@ s" testt" search swap drop swap drop 
[if]
    : gettest ( -- caddr u )
    s" ," dbfieldseparator
    s" " dbrecordseparator
    1000 mkretbuff
    s" select ((DTHtemperature/10)+((DTHtemperature%10)*0.1)) from thpdata where " presql$ $!
    s" (dtime > strftime('%s','now','-87000 seconds')) " presql$ $+!
    s" group by strftime('%Y%m%d%H',dtime,'unixepoch','localtime') having max(DTHtemperature) order by dtime ; " presql$ $+!
    presql$ $@ dbcmds sendsqlite3cmd drop
    dbret$  ;

   s" <h3>minday$: " type
   minday$ $@ type s" </h3><br>" type
   s" <h3>maxday$: " type
   maxday$ $@ type s" </h3><br>" type
   gettest
   dberrmsg s" <h3>error#: " type . s"  $:" type type s" </h3><br>" type
   s" <h3>rereading: " type type s" </h3><br>" type 

[then]
$>

</BODY>  
</HTML>

