<!DOCTYPE html>
<HTML>
<HEAD>  
<meta charset="utf-8">
<TITLE>Day THP data Charts</TITLE>  
</HEAD>  
<BODY>  

<$
 
include ../string.fs
include ../Gforth-Tools/sqlite3_gforth_lib.fs
decimal

variable datalogger_path$
variable dbpath$
variable junks$
variable presql$
variable postsql$
variable lablesnow$
variable datanow$
variable lablesday$
variable minday$
variable maxday$
variable minhumdday$
variable maxhumdday$
variable minpresday$
variable maxpresday$
variable datenow$
0 value starthour 
0 value startyear
0 value startday
0 value startmonth


s" /var/lib/datalogger-gforth/datalogger_home_path" slurp-file datalogger_path$ $!
s" /collection/sensordb.data" datalogger_path$ $@ junks$ $! junks$ $+!
junks$ $@ dbname
junks$ $@ dbpath$ $!


: dto$ ( d -- caddr u )  \ convert double signed to a string
    swap over dabs <<# #s rot sign #> #>> ;

: nextcomma ( caddr u -- caddr1 u1 nflag ) \ nflag is true if next comma is found and caddr u contains the string past that comma
    s" ," search if
	swap 1 + swap 1 - true
    then ;

: #uptocomma { caddr u -- d nflag } \ nflag is true is d is the number from string before a comma
    caddr u s" ," search if
	swap drop u swap - caddr swap s>number?
    else
	0 0 false
    then ;

: #pastxcomma { caddr u n#comma -- d nflag } \ nflag is true if n#comma is found and a number d can be extracted from it
    try
	n#comma 0 ?do
	    caddr u nextcomma if to u to caddr else 1 throw then
	loop
	caddr u #uptocomma
    restore 1 = if 0 0 false else true then
    endtry ;

: $pastxcomma { caddr u n#comma -- caddr1 u1 nflag } \ nflag is true if n#comma is found .. the caddr1 u1 will contain the string before that last comma
    try
	n#comma 0 ?do
	    caddr u nextcomma if to u to caddr else 1 throw then
	loop
	caddr u 2dup nextcomma if swap drop 1 + - else 2drop 2 - then
	true
    restore 1 = if 0 0 false else true then
    endtry ;


s" " dbrecordseparator
\ 10000 mkretbuff

: getdate ( -- )
    s" ," dbfieldseparator
    s" select date(dtime,'unixepoch','localtime') from thpdata limit 1 offset ((select max(rowid) from thpdata) -1);" dbcmds
    sendsqlite3cmd drop dbret$ 1 - datenow$ $! ;
 
: isnull? ( caddr u -- caddr1 u1 ) \ look for "NULL," in the string and if not found return string but if found return ","
    2dup s" NULL," search if 2drop 2drop s" ," else 2drop then ; 

: add0$ ( caddr u -- caddr1 u1 ) \ simply adds a "0" to begining of sting if string caddr u only contains one char at entry
    dup 1 = if s" 0" pad $! pad $+! pad $@ then ;

: getalldata ( -- caddr u )
    s" ," dbfieldseparator
    s" " dbrecordseparator
    1000 mkretbuff
    s" select strftime('%H',dtime,'unixepoch','localtime'),min(DTHtemperature),max(DTHtemperature),min(DTHhumd),max(DTHhumd)," presql$ $!
    s" min(BMPpressure),max(BMPpressure) from thpdata where " presql$ $+!
    s" (dtime > strftime('%s','now','-87000 seconds')) " presql$ $+!
    s" group by strftime('%Y%m%d%H',dtime,'unixepoch','localtime') order by dtime ; " presql$ $+!
    presql$ $@ dcmds sendsqlite3cmd drop
    dbret$ ;

: getnowlables
    s" ," dbfieldseparator
    s" " dbrecordseparator
    1000 mkretbuff
    s" select strftime('%H',dtime,'unixepoch','localtime') from thpdata where " presql$ $!
    s" (dtime > strftime('%s','now','-87000 seconds')) " presql$ $+!
    s" group by strftime('%Y%m%d%H',dtime,'unixepoch','localtime') order by dtime ; " presql$ $+!
    presql$ $@ dbcmds sendsqlite3cmd drop
    dbret$ 1 - lablesday$ $! ;

: getnowmin
    s" ," dbfieldseparator
    s" " dbrecordseparator
    1000 mkretbuff
    s" select ((min(DTHtemperature)/10)+((min(DTHtemperature)%10)*0.1)) from thpdata where " presql$ $!
    s" (dtime > strftime('%s','now','-87000 seconds')) " presql$ $+!
    s" group by strftime('%Y%m%d%H',dtime,'unixepoch','localtime') order by dtime ; " presql$ $+!
    presql$ $@ dbcmds sendsqlite3cmd drop
    dbret$ 1 - minday$ $! ;
: getnowmax
    s" ," dbfieldseparator
    s" " dbrecordseparator
    1000 mkretbuff
    s" select ((max(DTHtemperature)/10)+((max(DTHtemperature)%10)*0.1)) from thpdata where " presql$ $!
    s" (dtime > strftime('%s','now','-87000 seconds')) " presql$ $+!
    s" group by strftime('%Y%m%d%H',dtime,'unixepoch','localtime') order by dtime ; " presql$ $+!
    presql$ $@ dbcmds sendsqlite3cmd drop
    dbret$ 1 - maxday$ $! ;
: gethumdnowmin
    s" ," dbfieldseparator
    s" " dbrecordseparator
    1000 mkretbuff
    s" select ((min(DTHhumd)/10)+((min(DTHhumd)%10)*0.1)) from thpdata where " presql$ $!
    s" (dtime > strftime('%s','now','-87000 seconds')) " presql$ $+!
    s" group by strftime('%Y%m%d%H',dtime,'unixepoch','localtime') order by dtime ; " presql$ $+!
    presql$ $@ dbcmds sendsqlite3cmd drop
    dbret$ 1 - minhumdday$ $! ;

: gethumdnowmax
    s" ," dbfieldseparator
    s" " dbrecordseparator
    1000 mkretbuff
    s" select ((max(DTHhumd)/10)+((max(DTHhumd)%10)*0.1)) from thpdata where " presql$ $!
    s" (dtime > strftime('%s','now','-87000 seconds')) " presql$ $+!
    s" group by strftime('%Y%m%d%H',dtime,'unixepoch','localtime') order by dtime ; " presql$ $+!
    presql$ $@ dbcmds sendsqlite3cmd drop
    dbret$ 1 - maxhumdday$ $! ;
: getpresnowmin
    s" ," dbfieldseparator
    s" " dbrecordseparator
    1000 mkretbuff
    s" select ((min(BMPpressure)/10)+((min(BMPpressure)%10)*0.1)) from thpdata where " presql$ $!
    s" (dtime > strftime('%s','now','-87000 seconds')) " presql$ $+!
    s" group by strftime('%Y%m%d%H',dtime,'unixepoch','localtime') order by dtime ; " presql$ $+!
    presql$ $@ dbcmds sendsqlite3cmd drop
    dbret$ 1 - minpresday$ $! ;

: getpresnowmax
    s" ," dbfieldseparator
    s" " dbrecordseparator
    1000 mkretbuff
    s" select ((max(BMPpressure)/10)+((max(BMPpressure)%10)*0.1)) from thpdata where " presql$ $!
    s" (dtime > strftime('%s','now','-87000 seconds')) " presql$ $+!
    s" group by strftime('%Y%m%d%H',dtime,'unixepoch','localtime') order by dtime ; " presql$ $+!
    presql$ $@ dbcmds sendsqlite3cmd drop
    dbret$ 1 - maxpresday$ $! ;

getnowlables
getnowmin
getnowmax
gethumdnowmin
gethumdnowmax
getpresnowmin
getpresnowmax
getdate
$>

<script src="../chart/Chart.js"></script>


<div style="position: relative; width: 1000px; height: 310px;">
<canvas id="tempChart" width="1000" height="300" ></canvas>
</div>
<div style="position: absolute; top:0px; left:0px;">
<canvas id="tcl" width="1000" height="300"></canvas>
</div>


<div style="position: relative; width: 1000px; height: 310px;">
<canvas id="humdChart" width="1000" height="300"></canvas>
</div>
<div style="position: absolute; top:311px; left:0px;">
<canvas id="hCl" width="1000" height="300"></canvas>
</div>


<div style="position: relative; width: 1000px; height: 310px;">
<canvas id="pressureforthChart" width="1000" height="300"></canvas>
</div>
<div style="position: absolute; top:621px; left:0px;">
<canvas id="pCl" width="1000" height="300"</canvas>
</div>


<script>
  var tempoptions = { 'pointDotRadius':2 , 'scaleFontColor': "#572", 'scaleFontFamily': "'Comic Sans MS'",'scaleFontStyle': "bold" };
  var tempdata = {
  labels : [ <$ lablesday$ $@ type $> ],
    datasets : [
    {
    fillColor : "rgba(120,220,250,0.5)",
    strokeColor : "rgba(220,220,220,1)",
    pointColor : "rgba(220,220,220,1)",
    pointStrokeColor : "#fff",
    data : [ <$ minday$ $@ type $> ]
      },
      {
      fillColor : "rgba(151,187,205,0.5)",
      strokeColor : "rgba(151,187,205,1)",
      pointColor : "rgba(151,187,205,1)",
      pointStrokeColor : "#fff",
      data : [ <$ maxday$ $@ type $> ]
        }
	]
	}
	
	var tempctx = document.getElementById("tempChart").getContext("2d");
 	var mytempChart = new Chart(tempctx).Line(tempdata,tempoptions);
	
	var tlctx = document.getElementById("tcl").getContext("2d");
	tlctx.fillStyle="#572";
	tlctx.font="30px Comic Sans MS";
	tlctx.fillText('Temperature min max for <$ datenow$ $@ type $> ',300,40);
	  tlctx.fillStyle="red";
	  tlctx.font="15px Comic Sans MS";  
          tlctx.fillText('C',60 ,240);
	  tlctx.fillText('Hour',100,270);
          tlctx.beginPath();
          tlctx.moveTo(60,220);
          tlctx.lineTo(60,180);
          tlctx.lineTo(65,190);
          tlctx.moveTo(140,270);
          tlctx.lineTo(200,270);
          tlctx.lineTo(190,265);
          tlctx.strokeStyle="red";
          tlctx.stroke();
</script>

<script>
  var humdoptions = { 'pointDotRadius':2 , scaleFontColor : "#572", scaleFontFamily : "'Comic Sans MS'", scaleFontStyle : "bold" };
  var humddata = {
  labels : [ <$ lablesday$ $@ type $> ],
    datasets : [
    {
    fillColor : "rgba(120,220,250,0.5)",
    strokeColor : "rgba(220,220,220,1)",
    pointColor : "rgba(220,220,220,1)",
    pointStrokeColor : "#fff",
    data : [ <$ minhumdday$ $@ type $> ]
      },
      {
      fillColor : "rgba(151,187,205,0.5)",
      strokeColor : "rgba(151,187,205,1)",
      pointColor : "rgba(151,187,205,1)",
      pointStrokeColor : "#fff",
      data : [ <$ maxhumdday$ $@ type $> ]
	}
	]
	}
	
	//Get the context of the canvas element we want to select
	var humdctx = document.getElementById("humdChart").getContext("2d");
	var myhumdChart = new Chart(humdctx).Line(humddata,humdoptions);

	var hclctx = document.getElementById("hCl").getContext("2d");
        hclctx.fillStyle="#572";
        hclctx.font="30px Comic Sans MS";
        hclctx.fillText('Relative Humidity min max for <$ datenow$ $@ type $> ',300,40);
          hclctx.fillStyle="red";
	  hclctx.font="15px Comic Sans MS";
          hclctx.fillText('% rH',65 ,240);
          hclctx.fillText('Hour',100,270);
          hclctx.beginPath();
          hclctx.moveTo(65,220);
          hclctx.lineTo(65,180);
          hclctx.lineTo(70,190);
          hclctx.moveTo(140,270);
          hclctx.lineTo(200,270);
          hclctx.lineTo(190,265);
          hclctx.strokeStyle="red";
          hclctx.stroke();
</script>

<script>
  var pressoptions = { 'pointDotRadius':2 , scaleFontColor : "#572", scaleFontFamily : "'Comic Sans MS'", scaleFontStyle : "bold" };
  var pressuredata = {
  labels : [ <$ lablesday$ $@ type $> ],
  datasets : [
  {
  fillColor : "rgba(120,220,250,0.5)",
  strokeColor : "rgba(220,220,220,1)",
  pointColor : "rgba(220,220,220,1)",
  pointStrokeColor : "#fff",
  data : [ <$ minpresday$ $@ type $> ]
    },
    {
    fillColor : "rgba(151,187,205,0.5)",
    strokeColor : "rgba(151,187,205,1)",
    pointColor : "rgba(151,187,205,1)",
    pointStrokeColor : "#fff",
    data : [ <$ maxpresday$ $@ type $> ]
      }
      ]
      }
	
	//Get the context of the canvas element we want to select
	var pressurectx = document.getElementById("pressureforthChart").getContext("2d");
	var mypressChart = new Chart(pressurectx).Line(pressuredata,pressoptions);
	
	var pclctx = document.getElementById("pCl").getContext("2d");
        pclctx.fillStyle="#572";
        pclctx.font="30px Comic Sans MS";
        pclctx.fillText('Barometric Pressure min max for <$ datenow$ $@ type $> ',300,40);
          pclctx.fillStyle="red";
          pclctx.font="15px Comic Sans MS";
          pclctx.fillText('pa',80 ,240);
          pclctx.fillText('Hour',100,270);
	  pclctx.beginPath();
	  pclctx.moveTo(80,220);
	  pclctx.lineTo(80,180);
	  pclctx.lineTo(85,190);
	  pclctx.moveTo(140,270);
	  pclctx.lineTo(200,270);
	  pclctx.lineTo(190,265);
	  pclctx.strokeStyle="red";
	  pclctx.stroke();
</script>

<$ url-args $@ s" testt" search swap drop swap drop 
[if]
    : gettest ( -- caddr u )
    s" ," dbfieldseparator
    s" " dbrecordseparator
    1000 mkretbuff
    s" select ((max(DTHtemperature)/10)+((max(DTHtemperature)%10)*0.1)) from thpdata where " presql$ $!
    s" (dtime > strftime('%s','now','-87000 seconds')) " presql$ $+!
    s" group by strftime('%Y%m%d%H',dtime,'unixepoch','localtime') order by dtime ; " presql$ $+!
    presql$ $@ dbcmds sendsqlite3cmd drop
    dbret$  ;

   s" <h3>minday$: " type
   minday$ $@ type s" </h3><br>" type
   s" <h3>maxday$: " type
   maxday$ $@ type s" </h3><br>" type
   gettest
   dberrmsg s" <h3>error#: " type . s"  $:" type type s" </h3><br>" type
   s" <h3>rereading: " type type s" </h3><br>" type 
   s" <h3>getall: " type getalldata type s" </h3><br>" type
[then]
$>

</BODY>  
</HTML>

