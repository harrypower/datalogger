<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Last data</title>
</head>

<$
require string.fs
require ../Gforth-Tools/sqlite3_gforth_lib.fs
decimal

variable datalogger_path$
variable dbpath$
variable junks$
variable presql$
variable year-$url$ s" " year-$url$ $!
variable month-$url$ s" " month-$url$ $!
variable day-$url$ s" " day-$url$ $!
variable hour-$url$ s" " hour-$url$ $! 
variable selectymdh$ s" " selectymdh$ $!
variable alldata$
variable test$ s" " test$ $!
false value datecheck
false value numbercheck
false value selectedrow

s" /var/lib/datalogger-gforth/datalogger_home_path" slurp-file datalogger_path$ $!
s" /collection/sensordb.data" datalogger_path$ $@ junks$ $! junks$ $+!
junks$ $@ dbname
junks$ $@ dbpath$ $!

: add0$ ( caddr u -- caddr1 u1 ) \ simply adds a "0" to begining of sting if string caddr u only contains one char at entry
    dup 1 = if s" 0" pad $! pad $+! pad $@ then ;

: url-argvar! ( -- )  \ puts strings url-arg variables that are searchable in current voc
    url-args $@ { caddr u }         
    begin
	caddr u s" =" search
	if
	    swap drop caddr u rot - junks$ $! s" -$url$" junks$ $+! junks$ $@ find-name
	    if \ found named variable 
		caddr u s" =" search drop
		1 - swap 1 + swap 2dup
		s" &" search
		if \ found "&" store string and continue parsing
		    2dup 1 - to u 1 + to caddr swap drop - false -rot
		else \ did not find "&" done the url-arg string parsing now
		    to u to caddr true -rot
		then
		junks$ $@ find-name name?int execute $!
	    else \ did not find named variable
		caddr u s" =" search drop
		1 - to u 1 + to caddr false
	    then
	else
	    2drop true
	then
    until ;

: checkdateTimeinDB ( -- nflag )  \ checks the date string in selectymd$ variable to see if 1 entrys in db close to that time
    s" " dbfieldseparator
    s" " dbrecordseparator
    200 mkretbuff
    s" select row from thpdata where (datetime(dtime,'unixepoch','localtime') > " presql$ $!
    s" '" presql$ $+! selectymdh$ $@ presql$ $+! s" '" presql$ $+!
    s" ) limit 1 ;" presql$ $+! presql$ $@ dbcmds
    sendsqlite3cmd drop dbret$ s>number?
    to datecheck d>s to selectedrow
    datecheck ;

: getrows
    s" </td><td>" dbfieldseparator
    s" </td></tr><tr><td>" dbrecordseparator
    10000 mkretbuff
    s" select datetime(dtime,'unixepoch','localtime'),((DTHtemperature/10)+((DTHtemperature%10)*0.1)),((DTHhumd/10)+((DTHhumd%10)*0.1)),BMPpressure from thpdata  " presql$ $!
    s"  limit 100 offset ((select max(rowid) from thpdata) -100);" presql$ $+! presql$ $@
    dbcmds sendsqlite3cmd drop dbret$ alldata$ $! ;

: getxrows
    s" </td><td>" dbfieldseparator
    s" </td></tr><tr><td>" dbrecordseparator
    10000 mkretbuff
    s" select datetime(dtime,'unixepoch','localtime'),((DTHtemperature/10)+((DTHtemperature%10)*0.1)),((DTHhumd/10)+((DTHhumd%10)*0.1)),BMPpressure from thpdata  " presql$ $!
    s" where (datetime(dtime,'unixepoch','localtime') > "  presql$ $+!
    s" '" presql$ $+! selectymdh$ $@ presql$ $+! s" '" presql$ $+!
    s"  ) limit 100  ;" presql$ $+! presql$ $@
    dbcmds sendsqlite3cmd drop dbret$ alldata$ $! ;

\ getrows
\ false [if]
url-args $@ swap drop 0 =
[if]
    getrows
[else]
    url-argvar!
    year-$url$ $@ s>number? -rot 2drop 
    month-$url$ $@ s>number? -rot 2drop and
    day-$url$ $@ s>number? -rot 2drop and
    hour-$url$ $@ s>number? -rot 2drop and dup to numbercheck true =
    [if]
	year-$url$ $@ selectymdh$ $! s" -" selectymdh$ $+!
	month-$url$ $@ add0$ selectymdh$ $+! s" -" selectymdh$ $+!
	day-$url$ $@ add0$ selectymdh$ $+! s"  " selectymdh$ $+!
	hour-$url$ $@ add0$ selectymdh$ $+! s" :00" selectymdh$ $+!
	checkdateTimeinDB true =
	[if]
	    getxrows
	[else]
	    getrows
	[then]
    [else]
	getrows
    [then]
[then]
\ [then]
$>

<body>
<h1>List of 100 data points</h1>
    <table cellspacing="20">
    <tr> <td>Date</td><td>Temperature in C</td><td>Humidity in rH</td><td>Pressure in pa</td><td></td></tr>
<tr> <td>
<$ alldata$ $@ type $> </td> <td></td><td></td><td></td><td></td></tr>
</table>

<form action="data-table.shtml" method="get">
Year <input type="number" name="year" min="2014" max="2020" step="1" value="2014"><br>
Month <input type="number" name="month" min="1" max="12" step="1" value="1"><br>
Day <input type="number" name="day" min="1" max="31" step="1" value="1"><br>
Hour <input type="number" name="hour" min="0" max="60" step="1" value="0"><br>
<input type="submit" value="Display 100 data points starting at this selected date & time">
</form>

    
    
<$
    url-args $@ swap drop 0 >
    [if]
	url-args $@ s" testt" search swap drop swap drop
	[if]
	    url-args $@ type s" <br>" type 
	    year-$url$ $@ type s"  " type month-$url$ $@ type s"  " type day-$url$ $@ type s"  " type hour-$url$ $@ type s"  " type
	    datecheck .  s"  " type selectedrow . s"  " type test$ $@ type  
	[then]
	datecheck numbercheck and false =
	[if]
	    s" <h3>The date time you entered is not in the database!</h3>" type 
	[then]
    [then]
	
$>
</body>
</html>
