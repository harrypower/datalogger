<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>chart data</title>
</head>
<link rel="stylesheet" type="text/css" href="styleA.css">
<BODY>
  <$
  require ../collection/gforth-misc-tools.fs
  require ../collection/stringobj.fs
  require ../collection/db-stuff.fs
  require ../collection/svgchart.fs
  require ../collection/script.fs

  strings heap-new constant thedate
  string heap-new constant tempargs
  strings heap-new constant splitargs
  strings heap-new constant parsedargs
  string heap-new constant junk$

  time&date
  #to$ thedate !$x \ year
  #to$ thedate !$x \ month
  dup 1 = [if] drop 28 [else] 1 - [then]
  #to$ thedate !$x \ day
  #to$ thedate !$x \ hour
  2drop
  thedate reset
  url-args $@ swap drop 0 =
  [if] \ make default args
    s" data=co2&year=" tempargs !$
    thedate @$x tempargs !+$
    s" &month=" tempargs !+$
    thedate @$x tempargs !+$
    s" &day=" tempargs !+$
    thedate @$x tempargs !+$
    s" &hour=" tempargs !+$
    thedate @$x tempargs !+$
    s" &time=H&quantity=30" tempargs !+$
    tempargs @$ url-args $!
    thedate reset
  [then]
  url-args $@ tempargs !$
  s" &" tempargs !+$
  s" &" tempargs @$ splitargs split$>$s
  : testit
  time&date . space . space . space . space . space . space ." <br>"
  splitargs $qty dup . ." <br>" splitargs reset
  0 ?do splitargs @$x type ." <br>" loop ; testit
  : orderargs ( -- ) \ simply place the args in correct order to parsedargs
    splitargs reset splitargs $qty 0
    do splitargs @$x tempargs !$
      s" =" tempargs split$ drop parsedargs !$x 2drop loop ;
  orderargs
  : test$size ( caddr u nsize -- caddr1 u1 ) \ adjust caddr u to ensure it is a string of nsize if it is smaller
    { nsize }
    junk$ !$
    junk$ len$ nsize <
    if nsize junk$ len$ - 0 ?do  s" 0" junk$ !<+$ loop then
    junk$ @$ ;
  : test$number ( caddr u nmin nmax ndigits -- caddr1 u1 )
    \ take caddr u string and convert to number then test if number is in nmin to nmax limits
    \ output caddr1 u1 string of number with ensured ndigits in string of number
    \ If number falls outside of nmin and nmax simply output nmin as a string ensuring ndigits in string
     { caddr u nmin nmax ndigits }
     caddr u s>number? true =
     if \ is a number
      d>s dup nmin < swap nmax > or true =
      if \ number ouside of nmin and nmax
        nmin #to$ ndigits test$size
      else
        caddr u ndigits test$size
      then
     else \ not a number
      2drop
      nmin #to$ ndigits test$size
     then ;
  : fixargs ( -- ) \ ensure day month day hour are two digit strings
    parsedargs reset
    splitargs destruct
    parsedargs @$x splitargs !$x
    parsedargs @$x 2015 2015 4 test$number splitargs !$x
    parsedargs @$x 1 12 2 test$number splitargs !$x
    parsedargs @$x 1 31 2 test$number splitargs !$x
    parsedargs @$x 0 23 2 test$number splitargs !$x
    parsedargs @$x splitargs !$x
    parsedargs @$x 1 50 2 test$number splitargs !$x ;
    fixargs
  : testit3
    splitargs $qty dup . ." <br>" 0 do splitargs @$x type ." <br>" loop ;
    testit3
  : testit2
    parsedargs $qty dup . ." <br>" parsedargs reset
    0 ?do parsedargs @$x type ." <br>" loop ; testit2
  parsedargs getlocalNminmaxavg ." <br>" .s ." <br>" type ." <br>"
  $>
<p>url args: <$ url-args $@ type $> </p>
<h1>Select options below to see the data</h1>
<form action="seedata.shtml"  method="get">
Data to view:
<select name="data">
  <option value="co2">co2</option>
  <option value="nh3">nh3</option>
  <option value="temp">Temperature</option>
  <option value="humd">Humidity</option>
  <option value="pressure">Pressure</option>
</select><br>
Start Year:
<input type="number" name="year" min="2015" max="2020" <$ s\" value=\"" type thedate @$x type $> "><br>
Start Month:
<input type="number" name="month" min="1" max="12" <$ s\" value=\"" type thedate @$x type $> "><br>
Start Day:
<input type="number" name="day" min="1" max="31" <$ s\" value=\"" type thedate @$x type $> "><br>
Start Hour:
<input type="number" name="hour" min="0" max="23" <$ s\" value=\"" type thedate @$x type $> "><br>
Time frame to view:
<select name="time">
  <option value="H">Hour</option>
  <option value="d">Day</option>
</select><br>
Quantity of data to view:
<input type="number" name="quantity" min="1" max="50" value="1"><br>
<input type="submit" value="submit">
</form>

<p>Submit to see the selected data!</p>
</body>
</html>
